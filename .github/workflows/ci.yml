# name: CI Pipeline

# on:
#     pull_request:
#         branches:
#             - dev
#             - qa
#             - main

# jobs:
#     build:
#         runs-on: ubuntu-latest

#         steps:
#             - name: Checkout code
#               uses: actions/checkout@v2

#             - name: Set up JDK 17
#               uses: actions/setup-java@v2
#               with:
#                   distribution: 'adopt'
#                   java-version: '17'

#             - name: Cache Gradle packages
#               uses: actions/cache@v2
#               with:
#                   path: |
#                       ~/.gradle/caches
#                       ~/.gradle/wrapper
#                   key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#                   restore-keys: |
#                       ${{ runner.os }}-gradle-

#             - name: Grant execute permission for gradlew
#               run: chmod +x gradlew

#             - name: Build with Gradle
#               run: ./gradlew build

#             - name: Run unit tests
#               run: ./gradlew test

#             - name: Login to Docker Hub
#               if: success()
#               uses: docker/login-action@v2
#               with:
#                 username: ${{ secrets.DOCKER_USERNAME }}
#                 password: ${{ secrets.DOCKER_PASSWORD }}

#             - name: Build Docker images
#               if: success()
#               run: |
#                 docker build -t ${{ secrets.DOCKER_USERNAME }}/products:latest -f ms_products/deployment/Dockerfile-ms-products ./ms-products
#                 docker build -t ${{ secrets.DOCKER_USERNAME }}/database:latest -f ms_products/deployment/Dockerfile.database .

#             - name: Push Docker images to Docker Hub
#               if: success()
#               run: |
#                 docker push ${{ secrets.DOCKER_USERNAME }}/products:latest
#                 docker push ${{ secrets.DOCKER_USERNAME }}/database:latest

#             # - name: Install Railway CLI
#             #   if: success()
#             #   run: npm install -g railway

#             # - name: Login to Railway
#             #   if: success()
#             #   run: railway login --token ${{ secrets.RAILWAY_TOKEN }}

#             # - name: Deploy to Railway
#             #   if: success()
#             #   run: |
#             #     railway up --service products --image ${{ secrets.DOCKER_USERNAME }}/products:latest
#             #     railway up --service database --image ${{ secrets.DOCKER_USERNAME }}/database:latest
